?dist
>hclust
?hclust
setwd("C:/Users/Usman shah/OneDrive/Desktop/INFO304/playingWithData/playing_with_data/project3")
###########################################################################
# simple.fn
#--------------------------------------------------------------------------
# Example simple function to be called by apply
# IN: x - the row of data for one household
#     fn - the simple function (mean, min, etc.) to apply to the vector x
#   col.range - the columns to select from x to apply fn. Defaults to all columns
# OUT: the result of applying fn to x for those columns
#########################################################################
simple.fn <- function(x,fn,cols=1:length(x))
{
fn(x[cols])
}
###########################################################################
# build.table
#--------------------------------------------------------------------------
# Build the table of explanatory variables using the
# original electricity data (p)
# IN: p - the original electricity dataset
# OUT: The constructed table of data to use with kmeans
# NOTE: Each row of p is a household
#       The columns of p are the 48 readings in time for each household
#############################################################
build.table <- function(p)
{
tab <- apply(p,1,simple.fn,mean)  # mean over all time periods
tab <- cbind(tab,apply(p,1,simple.fn,var))
tab <- cbind(tab,apply(p,1,simple.fn,sum))
tab <- cbind(tab,apply(p,1,simple.fn,max,1:12)) # Max for first 12 time periods (6 hours from 12:30am)
tab <- cbind(tab,apply(p,1,simple.fn,sum,12:19))
tab <- cbind(tab,apply(p,1,simple.fn,min))
colnames(tab) <- c("mean","var","sum","max12","sumoverperiod","min")  # labels for each column
as.data.frame(tab)   # Return the final table
}
####################################################################
# do.cluster
#--------------------------------------------------------------------
# IN: power.table  - the table of explanatory variables from build.table
#     num.clusters - number of clusters for kmeans
# OP: Performs kmeans clustering for num.clusters
# OUT: The result of the clustering algorithm
# NOTE: Assumes that the power.table has rows for each household, and
#       columns for the explanatory variables
#########################################################################
do.cluster <- function(power.table,num.clusters=6)
{
kmeans(scale(power.table),centers=num.clusters)
}
sixclusters <- do.cluster(table, num.clusters = 6)
summary(sixclusters)
sixclusters <- do.cluster(table, num.clusters = 6)
###########################################################################
# simple.fn
#--------------------------------------------------------------------------
# Example simple function to be called by apply
# IN: x - the row of data for one household
#     fn - the simple function (mean, min, etc.) to apply to the vector x
#   col.range - the columns to select from x to apply fn. Defaults to all columns
# OUT: the result of applying fn to x for those columns
#########################################################################
simple.fn <- function(x,fn,cols=1:length(x))
{
fn(x[cols])
}
###########################################################################
# build.table
#--------------------------------------------------------------------------
# Build the table of explanatory variables using the
# original electricity data (p)
# IN: p - the original electricity dataset
# OUT: The constructed table of data to use with kmeans
# NOTE: Each row of p is a household
#       The columns of p are the 48 readings in time for each household
#############################################################
build.table <- function(p)
{
tab <- apply(p,1,simple.fn,mean)  # mean over all time periods
tab <- cbind(tab,apply(p,1,simple.fn,var))
tab <- cbind(tab,apply(p,1,simple.fn,sum))
tab <- cbind(tab,apply(p,1,simple.fn,max,1:12)) # Max for first 12 time periods (6 hours from 12:30am)
tab <- cbind(tab,apply(p,1,simple.fn,sum,12:19))
tab <- cbind(tab,apply(p,1,simple.fn,min))
colnames(tab) <- c("mean","var","sum","max12","sumoverperiod","min")  # labels for each column
as.data.frame(tab)   # Return the final table
}
####################################################################
# do.cluster
#--------------------------------------------------------------------
# IN: power.table  - the table of explanatory variables from build.table
#     num.clusters - number of clusters for kmeans
# OP: Performs kmeans clustering for num.clusters
# OUT: The result of the clustering algorithm
# NOTE: Assumes that the power.table has rows for each household, and
#       columns for the explanatory variables
#########################################################################
do.cluster <- function(power.table,num.clusters=6)
{
kmeans(scale(power.table),centers=num.clusters)
}
sixclusters <- do.cluster(table, num.clusters = 6)
bindedTable <- cbind(p,sixclusters$cluster)
#
# Electricity patterns
# Time series, one day, equal spacing, 30 mins per sample
# Starts at midnight
#
p <- read.csv('power.csv',header=FALSE)
# Since first column is the place, let's change it to the row name and remove it
#
rownames(p) <- p[,1] # Set rownames to the household ids
p <- p[,2:ncol(p)] # Remove the first column since this the holdhold ids
colnames(p) <- seq(from=1,to=48,by=1)  # Rename columns to be the sample "time"
par(mfrow=c(1,2))
par(mar=c(5,5,1,1))
boxplot(p,xlab="Time",ylab="Electricity Usage", main="All Households")
#
# Plot the first household data
plot(as.numeric(p[5,]),type="l",xlab="Time",ylab="Electricity Usage",main="One Household")
#
par(mfrow=c(1,1)) # turn display back to single figure
###########################################################################
# simple.fn
#--------------------------------------------------------------------------
# Example simple function to be called by apply
# IN: x - the row of data for one household
#     fn - the simple function (mean, min, etc.) to apply to the vector x
#   col.range - the columns to select from x to apply fn. Defaults to all columns
# OUT: the result of applying fn to x for those columns
#########################################################################
simple.fn <- function(x,fn,cols=1:length(x))
{
fn(x[cols])
}
###########################################################################
# build.table
#--------------------------------------------------------------------------
# Build the table of explanatory variables using the
# original electricity data (p)
# IN: p - the original electricity dataset
# OUT: The constructed table of data to use with kmeans
# NOTE: Each row of p is a household
#       The columns of p are the 48 readings in time for each household
#############################################################
build.table <- function(p)
{
tab <- apply(p,1,simple.fn,mean)  # mean over all time periods
tab <- cbind(tab,apply(p,1,simple.fn,var))
tab <- cbind(tab,apply(p,1,simple.fn,sum))
tab <- cbind(tab,apply(p,1,simple.fn,max,1:12)) # Max for first 12 time periods (6 hours from 12:30am)
tab <- cbind(tab,apply(p,1,simple.fn,sum,12:19))
tab <- cbind(tab,apply(p,1,simple.fn,min))
colnames(tab) <- c("mean","var","sum","max12","sumoverperiod","min")  # labels for each column
as.data.frame(tab)   # Return the final table
}
####################################################################
# do.cluster
#--------------------------------------------------------------------
# IN: power.table  - the table of explanatory variables from build.table
#     num.clusters - number of clusters for kmeans
# OP: Performs kmeans clustering for num.clusters
# OUT: The result of the clustering algorithm
# NOTE: Assumes that the power.table has rows for each household, and
#       columns for the explanatory variables
#########################################################################
do.cluster <- function(power.table,num.clusters=6)
{
kmeans(scale(power.table),centers=num.clusters)
}
sixclusters <- do.cluster(table, num.clusters = 6)
View(build.table)
table <- build.table(p)
####################################################################
# do.cluster
#--------------------------------------------------------------------
# IN: power.table  - the table of explanatory variables from build.table
#     num.clusters - number of clusters for kmeans
# OP: Performs kmeans clustering for num.clusters
# OUT: The result of the clustering algorithm
# NOTE: Assumes that the power.table has rows for each household, and
#       columns for the explanatory variables
#########################################################################
do.cluster <- function(power.table,num.clusters=6)
{
kmeans(scale(power.table),centers=num.clusters)
}
sixclusters <- do.cluster(table, num.clusters = 6)
summary(sixclusters)
bindedTable <- cbind(p,sixclusters$cluster)
colnames(bindedTable)[49] <- "cluster"
par(mfrow=c(3,3))
par(mar=c(3,5,1,1))
c1 <- which(bindedTable$cluster==1)
c2 <- which(bindedTable$cluster==2)
c3 <- which(bindedTable$cluster==3)
c4 <- which(bindedTable$cluster==4)
c5 <- which(bindedTable$cluster==5)
c6 <- which(bindedTable$cluster==6)
boxplot(bindedTable[c1,],xlab = "time", ylab = "Usage",main="cluster1")
boxplot(bindedTable[c2,],xlab = "time")
boxplot(bindedTable[c3,],xlab = "time")
boxplot(bindedTable[c4,],xlab = "time")
boxplot(bindedTable[c5,],xlab = "time")
boxplot(bindedTable[c6,],xlab = "time")
par(mfrow=c(1,1)) # to exit the plots on the same
boxplot(bindedTable[c1,],xlab = "time", ylab = "Usage",main="cluster1")
par(mfrow=c(3,3))
par(mar=c(3,5,1,1))
c1 <- which(bindedTable$cluster==1)
c2 <- which(bindedTable$cluster==2)
c3 <- which(bindedTable$cluster==3)
c4 <- which(bindedTable$cluster==4)
c5 <- which(bindedTable$cluster==5)
c6 <- which(bindedTable$cluster==6)
boxplot(bindedTable[c1,],xlab = "time", ylab = "Usage",main="cluster1")
boxplot(bindedTable[c2,],xlab = "time", ylab = "Usage",main="cluster2")
boxplot(bindedTable[c3,],xlab = "time", ylab = "Usage",main="cluster3")
boxplot(bindedTable[c4,],xlab = "time", ylab = "Usage",main="cluster4")
boxplot(bindedTable[c5,],xlab = "time", ylab = "Usage",main="cluster5")
boxplot(bindedTable[c6,],xlab = "time", ylab = "Usage",main="cluster6")
par(mfrow=c(1,1)) # to exit the plots on the same
# plot showing th mean usage for each time stamp for each cluster.
par(mfrow=c(3,3))
par(mar=c(3,5,1,1))
plot(colMeans((bindedTable[c1,])),type = "l")
plot(colMeans((bindedTable[c2,])),type = "l")
par(mfrow=c(1,1)) # to exit the plots on the same
# plot showing th mean usage for each time stamp for each cluster.
par(mfrow=c(3,3))
par(mar=c(3,5,1,1))
plot(colMeans((bindedTable[c1,])),type = "l", xlab = "Time", ylab = "Usage", main = "Cluster 1", col="red")
par(mfrow=c(1,1)) # to exit the plots on the same
# plot showing th mean usage for each time stamp for each cluster.
par(mfrow=c(3,3))
par(mar=c(3,5,1,1))
plot(colMeans((bindedTable[c1,])),type = "l", xlab = "Time", ylab = "Usage", main = "Cluster 1 Mean", col="red")
plot(colMeans((bindedTable[c2,])),type = "l", xlab = "Time", ylab = "Usage", main = "Cluster 2 Mean", col="red")
plot(colMeans((bindedTable[c3,])),type = "l", xlab = "Time", ylab = "Usage", main = "Cluster 3 Mean", col="red")
plot(colMeans((bindedTable[c4,])),type = "l", xlab = "Time", ylab = "Usage", main = "Cluster 4 Mean", col="red")
plot(colMeans((bindedTable[c5,])),type = "l", xlab = "Time", ylab = "Usage", main = "Cluster 5 Mean", col="red")
plot(colMeans((bindedTable[c5,])),type = "l", xlab = "Time", ylab = "Usage", main = "Cluster 6 Mean", col="red")
par(mfrow=c(1,1)) # to exit the plots on the same
View(table)
plot(table$mean,table$max12)
# Select two explanatory variables and plot them clouring each point by cluster
plot(table$sum,table$sumoverperiod)
# Select two explanatory variables and plot them clouring each point by cluster
plot(table$mean,table$sumoverperiod, xlab = "Mean", ylab = "sum over period")
View(bindedTable)
View(sixclusters)
print(sixclusters)
colnames(bindedTable)[49] <- "cluster"
bindedTable[49]
# Select two explanatory variables and plot them clouring each point by cluster
plot(table$mean,table$sumoverperiod, xlab = "Mean", ylab = "sum over period",col =bindedTable$cluster )
# Select two explanatory variables and plot them clouring each point by cluster
plot(table$min,table$sumoverperiod, xlab = "Mean", ylab = "sum over period",col =bindedTable$cluster )
# Select two explanatory variables and plot them clouring each point by cluster
plot(table$var,table$sumoverperiod, xlab = "Mean", ylab = "sum over period",col =bindedTable$cluster )
# Select two explanatory variables and plot them clouring each point by cluster
plot(table$max12,table$sumoverperiod, xlab = "Mean", ylab = "sum over period",col =bindedTable$cluster )
# Select two explanatory variables and plot them clouring each point by cluster
plot(table$max12,table$min, xlab = "Mean", ylab = "sum over period",col =bindedTable$cluster )
# Select two explanatory variables and plot them clouring each point by cluster
plot(table$max12,table$min, xlab = "Max from six hours.", ylab = "Minimum from all periods",col =bindedTable$cluster )
# Select two explanatory variables and plot them clouring each point by cluster
plot(table$sum,table$sumoverperiod, xlab = "Max from six hours.", ylab = "Minimum from all periods",col =bindedTable$cluster )
# Select two explanatory variables and plot them clouring each point by cluster
plot(table$sum,table$sumoverperiod, xlab = "Sum from all periods", ylab = "Sum from 6 hours",col =bindedTable$cluster )
